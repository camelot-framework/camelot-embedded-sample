<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:hz="http://www.hazelcast.com/schema/spring"
       xmlns:amq="http://activemq.apache.org/schema/core"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
            http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
            http://www.hazelcast.com/schema/spring
            http://www.hazelcast.com/schema/spring/hazelcast-spring-3.1.xsd
            http://camel.apache.org/schema/spring
            http://camel.apache.org/schema/spring/camel-spring.xsd
            http://www.springframework.org/schema/context
            http://www.springframework.org/schema/context/spring-context-3.0.xsd
            http://activemq.apache.org/schema/core
            http://activemq.apache.org/schema/core/activemq-core.xsd">

    <context:annotation-config/>
    <context:component-scan base-package="ru.yandex.qatools.terra.example"/>


    <!-- Embedded ActiveMQ -->
    <amq:broker useJmx="false" persistent="false">
        <amq:transportConnectors>
            <amq:transportConnector uri="tcp://localhost:61619"/>
        </amq:transportConnectors>
    </amq:broker>
    <amq:connectionFactory id="jmsFactory" brokerURL="vm://localhost:61619"/>
    <bean id="jmsConnectionFactory" class="org.apache.activemq.ActiveMQConnectionFactory">
        <property name="brokerURL" value="failover:(tcp://localhost:61619)?randomize=false"/>
    </bean>
    <bean id="pooledConnectionFactory" class="org.apache.activemq.pool.PooledConnectionFactory"
          depends-on="testContext" init-method="start" destroy-method="stop">
        <property name="timeBetweenExpirationCheckMillis" value="0"/>
        <property name="idleTimeout" value="0"/>
        <property name="maxConnections" value="8"/>
        <property name="maximumActiveSessionPerConnection" value="500"/>
        <property name="connectionFactory" ref="jmsConnectionFactory"/>
    </bean>
    <bean id="jmsConfig" class="org.apache.camel.component.jms.JmsConfiguration">
        <property name="connectionFactory" ref="pooledConnectionFactory"/>
        <property name="transacted" value="false"/>
        <property name="testConnectionOnStartup" value="true"/>
    </bean>
    <bean id="activemq" class="org.apache.activemq.camel.component.ActiveMQComponent">
        <property name="configuration" ref="jmsConfig"/>
        <property name="testConnectionOnStartup" value="true"/>
    </bean>

    <!-- Embedded Hazelcast -->
    <hz:hazelcast id="hazelcastInstance">
        <hz:config>
            <hz:group name="test" password="test-pass"/>
            <hz:properties>
                <hz:property name="hazelcast.merge.first.run.delay.seconds">5</hz:property>
                <hz:property name="hazelcast.merge.next.run.delay.seconds">5</hz:property>
            </hz:properties>
            <hz:network port="5801" port-auto-increment="true">
                <hz:join>
                    <hz:multicast enabled="false" multicast-group="224.2.2.3" multicast-port="54327"/>
                    <hz:tcp-ip enabled="true">
                        <hz:members>127.0.0.1</hz:members>
                    </hz:tcp-ip>
                </hz:join>
                <hz:interfaces>
                    <hz:interface>127.0.0.1</hz:interface>
                </hz:interfaces>
            </hz:network>

            <hz:map name="default"
                    backup-count="1"
                    max-size="0"
                    eviction-percentage="30"
                    read-backup-data="true"
                    eviction-policy="NONE"
                    merge-policy="hz.ADD_NEW_ENTRY"/>
        </hz:config>
    </hz:hazelcast>

    <!-- Embedded Terra -->
    <bean id="schedulerFactory" class="org.quartz.impl.StdSchedulerFactory"/>
    <bean id="engine" class="ru.yandex.qatools.terra.core.ProcessingEngineImpl" init-method="init">
        <constructor-arg name="configsLocation" value="classpath*:/terra-config.xml"/>
        <constructor-arg name="camelContext" ref="testContext"/>
        <constructor-arg name="pluginLoader">
            <bean class="ru.yandex.qatools.terra.core.SameClasspathPluginLoader"/>
        </constructor-arg>
        <constructor-arg name="scheduler">
            <bean factory-bean="schedulerFactory" factory-method="getScheduler"/>
        </constructor-arg>
        <constructor-arg name="inputUri" value="ref:events.input"/>
        <constructor-arg name="outputUri" value="direct:plugin.stop"/>
        <property name="contextInjector">
            <bean class="ru.yandex.qatools.terra.example.SpringContextInjector"/>
        </property>
        <property name="repositoryBuilder">
            <bean class="ru.yandex.qatools.terra.core.builders.HazelcastAggregationRepositoryBuilder">
                <constructor-arg name="hazelcastInstance" ref="hazelcastInstance"/>
                <constructor-arg name="camelContext" ref="testContext"/>
            </bean>
        </property>
    </bean>

    <!-- Camel context -->
    <camelContext id="testContext" xmlns="http://camel.apache.org/schema/spring">
        <jmxAgent id="agent" disabled="true"/>
        <threadPoolProfile id="terraDefaultProfile" defaultProfile="true" maxPoolSize="64"/>
        <endpoint id="events.input" uri="activemq:queue:events.input"/>

        <route id="stopped">
            <from uri="direct:plugin.stop"/>
            <stop/>
        </route>
    </camelContext>
</beans>
